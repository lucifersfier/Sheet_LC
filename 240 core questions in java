Ques - What are static block and staic initalizers in java ?

Ans - Static block or static initalizers are used to initalize static fields in java. We declare static blocks when we want to initalize static fields in our class. Static blocks gets executed exactly once when the class is loaded. Static blocks are executed even before the  constructors are executed.

Ques - How to call one constructor frpm another constructor ?

Ans - With in the same class if we want to call one constructor from another we use this() method. Based on the number of parameters we pass appropriate this() method is called.
Restrictions for using this method ->
(a) - this() must be the first statement in the constructor.
(b) - We can't use two this() method in the constructor.

Ques - What is method overriding in java ?

Ans - A child class gives its own version of a method that already exists in the parent class, using the same method name, same parameters and same return type.
    (a) - Inheritance is required(Child class must extend parent class).
    (b) - private, static and final methods can't be overridden.
    (c) - We can use @override annotation to tell the compiler you are overriding.

Ques - What is super keyword in java ?

Ans - The super keyword in java is used inside a child class to refer to things from its parent class.
    (a) - Call Parent's class constructor
    (b) - Access Parent's method
    (c) - Access Parent's variable

Ques - Why Java is platform independent ?

Ans - In any programming language soucre code is compiled into executable code. This can't be run across all platforms. When javac compiles a java program it generates an executable file called .class file.
Class files contains byte code. Byte codes are interpreted only by JVM's. Since these JVM's are made available across all platforms by Sun Microsystems, we can execute this byte code in any platform. Byte code generated in windows environment can also be executed in linux environment. This makes java platform independent.

Ques - What is Abstract class and interface ?

Ans - Abstract Class - A half-ready blueprint that contains some implemented code and some methods that subclasses must  
                       implement.
      Interface - A rulebook that says what a class must do but not how it should do it.

Ques - What is JIT Compiler ?

Ans - It stands for Just in time compiler. JIT compiler compiles byte code in to executable code. JIT a part of JVM. JIT 
      cannot convert complete java program in to executable code it converts as and when it is needed during execution.

Ques - What is bytecode in java ?

Ans- When a javac compiler compiles a class it generates .class files. This .class files contains set of instructions 
     called byte code. Byte code is a machine independent language and contains set of instructions which are to be executed by only JVM. JVM can understand this byte code.

Ques - Difference between this() and super() in java ?

Ans - this() is used to access one constructor from another with in the same class while super() is used to access   
      superclass constructor. Either this() or super() exists it must be the first statement in the constructor.

Ques - What is a class ?

Ans - Classes are fundamental or basic unit in OOP. A class is kind of blueprint or template for objects. A class tells what type of objects we are creating.

Ques - What is an object ?

Ans - An object is instance of class. A class defines type of object. Each object belongs to some class. Every object contains some state and behaviour. State is determined by value of attributes and behaviour is called method. Objects are also called as an instance.

Ques - What is method in Java ?

Ans - It contains the executable body that can be applied to the specific object of the class.
It includes method name, parameters or arguments and return type and a body of executable code.